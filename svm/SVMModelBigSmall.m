function [dataBigSmall, bigData, smallData, modelSVMBigSmall, accuracy,...
                            sAttributes, bAttributes, newAttributesTypes, newAttributes] = SVMModelBigSmall(trainData,...
                                                                                                          Attributes,...
                                                                                                          AttributesTypes,...
                                                                                                          target_attribute,...
                                                                                                          trainRatio,...
                                                                                                          randSeedIn,...
                                                                                                          bigGroup,...
                                                                                                          remove,...
                                                                                                          XVal,...
                                                                                                          oneMod,...
                                                                                                          Labels)
% generates the SVM model for data classification into targets: Big or
% Small. That is, one of the attributes, habitat in our case, is removed
% and replaced with 'belongs_to = {(b)ig, (s)mall}'. The new attribute is
% made out of habitat itself. An instance is classed as BIG if it is in the
% list bigGroup (input to function) and the rest of the instances as small.

% prepare new data for habitat class - First Level
[dataBigSmall, bigData, smallData, newAttributesTypes, newAttributes,...
    sAttributes, bAttributes] = createBigSmallClasses(trainData, Attributes, AttributesTypes, target_attribute, bigGroup);


% SVM Training data for Big/Small
disp(['Training Data: ' num2str(trainRatio) '%, Total Data: ' num2str(numel(dataBigSmall(:,1)))])

[dataBigSmallRand, ~, ~] = matrixRandomize(dataBigSmall, randSeedIn);
[~, modelSVMBigSmall, ~, accuracy, ~, ~, ~] = SVMModelBuildTest('belongs_to',...
    remove, [], trainRatio, XVal, oneMod, dataBigSmallRand, Labels, newAttributes, newAttributesTypes);

end